{"ast":null,"code":"var _jsxFileName = \"/Users/kimjunghwan/project/howmuch_front/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { combineReducers, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\"; // cookie\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet csrf = new Cookies().get(\"XSRF-TOKEN\");\nconsole.log(csrf); // end cookie\n// axios.defaults.xsrfCookieName = \"XSRF-TOKEN\";\n// axios.defaults.xsrfHeaderName = \"X-CSRF-TOKEN\";\n// axios.defaults.headers.common['X-CSRF-TOKEN'] = token;\n\nlet member;\nlet board;\nlet reply;\nlet hotBoard;\nlet value;\nlet attach;\nlet API_URL = \"http://localhost:3000\";\n\nconst signup = async (email, pw, nick) => {\n  await axios.post(API_URL + \"/signUp\", {\n    email: email,\n    pw: pw,\n    nick: nick\n  }).then(result => {\n    console.log(\"success signup\");\n    member = result.data;\n    console.log(member);\n  }).catch(console.log(\"signup error\"));\n}; // const login = async (username, password) => {\n//   await axios\n//     .post(API_URL + \"/login\", {\n//       username: username,\n//       password: password,\n//     })\n//     .then((result) => {\n//       console.log(\"success login\");\n//       console.log(result.data);\n//     })\n//     .catch((error) => {\n//       console.log(\"login error\");\n//       console.log(error);\n//     });\n// };\n\n\nfunction memberReducer(state = member, actions) {\n  if (actions.type === \"signup\") {\n    console.log(\"signup\");\n    signup(actions.payload.email, actions.payload.pw, actions.payload.nick);\n    return state;\n  } // if (actions.type === \"login\") {\n  //   login(actions.payload.username, actions.payload.password);\n  //   // test();\n  //   return state;\n  // }\n\n\n  return state;\n}\n\nfunction boardReducer(state = board, actions) {\n  if (actions.type === \"readList\") {\n    console.log(\"readList\");\n    let copy = [...state];\n    copy = actions.payload;\n    return copy;\n  }\n\n  return state;\n}\n\nfunction hotBoardReducer(state = hotBoard, actions) {\n  return state;\n}\n\nfunction replyReducer(state = reply, actions) {\n  if (actions.type === \"readReply\") {\n    state = actions.payload;\n    return state;\n  }\n\n  if (actions.type === \"insertReply\") {\n    state = actions.payload;\n    return state;\n  }\n\n  return state;\n}\n\nfunction valueReducer(state = value, actions) {\n  return state;\n}\n\nfunction attachReducer(state = attach, actions) {\n  return state;\n}\n\nlet store = createStore(combineReducers({\n  memberReducer,\n  boardReducer,\n  hotBoardReducer,\n  replyReducer,\n  valueReducer,\n  attachReducer\n}));\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 138,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n\nserviceWorkerRegistration.register(); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/kimjunghwan/project/howmuch_front/src/index.js"],"names":["React","ReactDOM","App","serviceWorkerRegistration","reportWebVitals","BrowserRouter","combineReducers","createStore","Provider","axios","Cookies","csrf","get","console","log","member","board","reply","hotBoard","value","attach","API_URL","signup","email","pw","nick","post","then","result","data","catch","memberReducer","state","actions","type","payload","boardReducer","copy","hotBoardReducer","replyReducer","valueReducer","attachReducer","store","render","document","getElementById","register"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,yBAAZ,MAA2C,6BAA3C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,kCAAP;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;;;AAEA,IAAIC,IAAI,GAAG,IAAID,OAAJ,GAAcE,GAAd,CAAkB,YAAlB,CAAX;AACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ,E,CAEA;AAEA;AACA;AACA;;AAEA,IAAII,MAAJ;AAEA,IAAIC,KAAJ;AAEA,IAAIC,KAAJ;AAEA,IAAIC,QAAJ;AAEA,IAAIC,KAAJ;AAEA,IAAIC,MAAJ;AAEA,IAAIC,OAAO,GAAG,uBAAd;;AAEA,MAAMC,MAAM,GAAG,OAAOC,KAAP,EAAcC,EAAd,EAAkBC,IAAlB,KAA2B;AACxC,QAAMhB,KAAK,CACRiB,IADG,CACEL,OAAO,GAAG,SADZ,EACuB;AACzBE,IAAAA,KAAK,EAAEA,KADkB;AAEzBC,IAAAA,EAAE,EAAEA,EAFqB;AAGzBC,IAAAA,IAAI,EAAEA;AAHmB,GADvB,EAMHE,IANG,CAMGC,MAAD,IAAY;AAChBf,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAC,IAAAA,MAAM,GAAGa,MAAM,CAACC,IAAhB;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACD,GAVG,EAWHe,KAXG,CAWGjB,OAAO,CAACC,GAAR,CAAY,cAAZ,CAXH,CAAN;AAYD,CAbD,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASiB,aAAT,CAAuBC,KAAK,GAAGjB,MAA/B,EAAuCkB,OAAvC,EAAgD;AAC9C,MAAIA,OAAO,CAACC,IAAR,KAAiB,QAArB,EAA+B;AAC7BrB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEAQ,IAAAA,MAAM,CAACW,OAAO,CAACE,OAAR,CAAgBZ,KAAjB,EAAwBU,OAAO,CAACE,OAAR,CAAgBX,EAAxC,EAA4CS,OAAO,CAACE,OAAR,CAAgBV,IAA5D,CAAN;AAEA,WAAOO,KAAP;AACD,GAP6C,CAQ9C;AACA;AACA;AAEA;AACA;;;AACA,SAAOA,KAAP;AACD;;AAED,SAASI,YAAT,CAAsBJ,KAAK,GAAGhB,KAA9B,EAAqCiB,OAArC,EAA8C;AAC5C,MAAIA,OAAO,CAACC,IAAR,KAAiB,UAArB,EAAiC;AAC/BrB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,QAAIuB,IAAI,GAAG,CAAC,GAAGL,KAAJ,CAAX;AAEAK,IAAAA,IAAI,GAAGJ,OAAO,CAACE,OAAf;AAEA,WAAOE,IAAP;AACD;;AACD,SAAOL,KAAP;AACD;;AAED,SAASM,eAAT,CAAyBN,KAAK,GAAGd,QAAjC,EAA2Ce,OAA3C,EAAoD;AAClD,SAAOD,KAAP;AACD;;AAED,SAASO,YAAT,CAAsBP,KAAK,GAAGf,KAA9B,EAAqCgB,OAArC,EAA8C;AAC5C,MAAIA,OAAO,CAACC,IAAR,KAAiB,WAArB,EAAkC;AAChCF,IAAAA,KAAK,GAAGC,OAAO,CAACE,OAAhB;AAEA,WAAOH,KAAP;AACD;;AACD,MAAIC,OAAO,CAACC,IAAR,KAAiB,aAArB,EAAoC;AAClCF,IAAAA,KAAK,GAAGC,OAAO,CAACE,OAAhB;AAEA,WAAOH,KAAP;AACD;;AACD,SAAOA,KAAP;AACD;;AAED,SAASQ,YAAT,CAAsBR,KAAK,GAAGb,KAA9B,EAAqCc,OAArC,EAA8C;AAC5C,SAAOD,KAAP;AACD;;AAED,SAASS,aAAT,CAAuBT,KAAK,GAAGZ,MAA/B,EAAuCa,OAAvC,EAAgD;AAC9C,SAAOD,KAAP;AACD;;AAED,IAAIU,KAAK,GAAGnC,WAAW,CACrBD,eAAe,CAAC;AACdyB,EAAAA,aADc;AAEdK,EAAAA,YAFc;AAGdE,EAAAA,eAHc;AAIdC,EAAAA,YAJc;AAKdC,EAAAA,YALc;AAMdC,EAAAA;AANc,CAAD,CADM,CAAvB;AAWAxC,QAAQ,CAAC0C,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,aAAD;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAQEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACA1C,yBAAyB,CAAC2C,QAA1B,G,CAEA;AACA;AACA;;AACA1C,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { combineReducers, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\n// cookie\n\nlet csrf = new Cookies().get(\"XSRF-TOKEN\");\nconsole.log(csrf);\n\n// end cookie\n\n// axios.defaults.xsrfCookieName = \"XSRF-TOKEN\";\n// axios.defaults.xsrfHeaderName = \"X-CSRF-TOKEN\";\n// axios.defaults.headers.common['X-CSRF-TOKEN'] = token;\n\nlet member;\n\nlet board;\n\nlet reply;\n\nlet hotBoard;\n\nlet value;\n\nlet attach;\n\nlet API_URL = \"http://localhost:3000\";\n\nconst signup = async (email, pw, nick) => {\n  await axios\n    .post(API_URL + \"/signUp\", {\n      email: email,\n      pw: pw,\n      nick: nick,\n    })\n    .then((result) => {\n      console.log(\"success signup\");\n      member = result.data;\n      console.log(member);\n    })\n    .catch(console.log(\"signup error\"));\n};\n\n// const login = async (username, password) => {\n//   await axios\n//     .post(API_URL + \"/login\", {\n//       username: username,\n//       password: password,\n//     })\n//     .then((result) => {\n//       console.log(\"success login\");\n//       console.log(result.data);\n//     })\n//     .catch((error) => {\n//       console.log(\"login error\");\n//       console.log(error);\n//     });\n// };\n\nfunction memberReducer(state = member, actions) {\n  if (actions.type === \"signup\") {\n    console.log(\"signup\");\n\n    signup(actions.payload.email, actions.payload.pw, actions.payload.nick);\n\n    return state;\n  }\n  // if (actions.type === \"login\") {\n  //   login(actions.payload.username, actions.payload.password);\n  //   // test();\n\n  //   return state;\n  // }\n  return state;\n}\n\nfunction boardReducer(state = board, actions) {\n  if (actions.type === \"readList\") {\n    console.log(\"readList\");\n\n    let copy = [...state];\n\n    copy = actions.payload;\n\n    return copy;\n  }\n  return state;\n}\n\nfunction hotBoardReducer(state = hotBoard, actions) {\n  return state;\n}\n\nfunction replyReducer(state = reply, actions) {\n  if (actions.type === \"readReply\") {\n    state = actions.payload;\n\n    return state;\n  }\n  if (actions.type === \"insertReply\") {\n    state = actions.payload;\n\n    return state;\n  }\n  return state;\n}\n\nfunction valueReducer(state = value, actions) {\n  return state;\n}\n\nfunction attachReducer(state = attach, actions) {\n  return state;\n}\n\nlet store = createStore(\n  combineReducers({\n    memberReducer,\n    boardReducer,\n    hotBoardReducer,\n    replyReducer,\n    valueReducer,\n    attachReducer,\n  })\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}