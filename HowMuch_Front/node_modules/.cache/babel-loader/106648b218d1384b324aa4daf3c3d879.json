{"ast":null,"code":"var _jsxFileName = \"/Users/kimjunghwan/project/howmuch_front/src/components/ReplyPagination.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReplyPagination = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let state = useSelector(state => {\n    return state;\n  });\n  let navigate = useNavigate();\n  let replyState = state.replyReducer; // pagination data\n\n  const items = replyState; // styled component\n\n  let Reply = styled(\"div\")`\n    background-color: #2d4059;\n    color: white;\n    display: flex;\n    justify-content: space-between;\n    padding: 10px;\n    margin-top: 20px;\n    border-radius: 12px;\n  `; // pagination\n\n  function Items({\n    currentItems\n  }) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-lg d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"800px\",\n            marginTop: \"100px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"24px\",\n              borderBottom: \"2px solid #2D4059\",\n              textAlign: \"left\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uB313\\uAE00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), currentItems && currentItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Reply, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"500px\",\n                  textAlign: \"left\"\n                },\n                children: item.rcontent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"250px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.replyer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.rdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.like\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.dislike\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  function PaginatedItems({\n    itemsPerPage\n  }) {\n    _s();\n\n    // We start with an empty list of items.\n    const [currentItems, setCurrentItems] = useState(null);\n    const [pageCount, setPageCount] = useState(0); // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n\n    const [itemOffset, setItemOffset] = useState(0);\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(items.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(items.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]); // Invoke when user click to request another page.\n\n    const handlePageClick = event => {\n      const newOffset = event.selected * itemsPerPage % items.length;\n      console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n      setItemOffset(newOffset);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Items, {\n        currentItems: currentItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"30px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          nextLabel: \">\",\n          onPageChange: handlePageClick,\n          pageRangeDisplayed: 5,\n          marginPagesDisplayed: 0,\n          pageCount: pageCount,\n          previousLabel: \"<\",\n          pageClassName: \"page-item\",\n          pageLinkClassName: \"page-link\",\n          previousClassName: \"page-item\",\n          previousLinkClassName: \"page-link\",\n          nextClassName: \"page-item\",\n          nextLinkClassName: \"page-link\",\n          breakLabel: \"\",\n          breakClassName: \"page-item\",\n          breakLinkClassName: \"page-link\",\n          containerClassName: \"pagination\",\n          activeClassName: \"active\",\n          renderOnZeroPageCount: null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } // end pagination\n\n\n  _s(PaginatedItems, \"HTeX8cSP+G2jiDQZoJcFFLxPhRM=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PaginatedItems, {\n      itemsPerPage: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ReplyPagination, \"bAwpicXAmDAVO29TleL/DusPiUI=\", false, function () {\n  return [useSelector, useNavigate];\n});\n\n_c = ReplyPagination;\nexport default ReplyPagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReplyPagination\");","map":{"version":3,"sources":["/Users/kimjunghwan/project/howmuch_front/src/components/ReplyPagination.js"],"names":["React","useEffect","useState","ReactPaginate","useSelector","useNavigate","styled","ReplyPagination","state","navigate","replyState","replyReducer","items","Reply","Items","currentItems","width","marginTop","fontSize","borderBottom","textAlign","map","item","index","rcontent","replyer","rdate","like","dislike","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","console","log","slice","Math","ceil","length","handlePageClick","event","newOffset","selected","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst ReplyPagination = () => {\n  let state = useSelector((state) => {\n    return state;\n  });\n\n  let navigate = useNavigate();\n\n  let replyState = state.replyReducer;\n\n  // pagination data\n  const items = replyState;\n\n  // styled component\n  let Reply = styled(\"div\")`\n    background-color: #2d4059;\n    color: white;\n    display: flex;\n    justify-content: space-between;\n    padding: 10px;\n    margin-top: 20px;\n    border-radius: 12px;\n  `;\n\n  // pagination\n  function Items({ currentItems }) {\n    return (\n      <>\n        <div className=\"container-lg d-flex justify-content-center\">\n          <div style={{ width: \"800px\", marginTop: \"100px\" }}>\n            <div\n              style={{\n                fontSize: \"24px\",\n                borderBottom: \"2px solid #2D4059\",\n                textAlign: \"left\",\n              }}\n            >\n              <span>댓글</span>\n            </div>\n            {currentItems &&\n              currentItems.map((item, index) => (\n                <div key={index}>\n                  <Reply>\n                    <div style={{ width: \"500px\", textAlign: \"left\" }}>\n                      {item.rcontent}\n                    </div>\n                    <div style={{ width: \"250px\" }}>\n                      <span>{item.replyer}</span>\n                      <span>{item.rdate}</span>\n                      <span>{item.like}</span>\n                      <span>{item.dislike}</span>\n                    </div>\n                  </Reply>\n                </div>\n              ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  function PaginatedItems({ itemsPerPage }) {\n    // We start with an empty list of items.\n    const [currentItems, setCurrentItems] = useState(null);\n    const [pageCount, setPageCount] = useState(0);\n    // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n    const [itemOffset, setItemOffset] = useState(0);\n\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(items.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(items.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]);\n\n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n      const newOffset = (event.selected * itemsPerPage) % items.length;\n      console.log(\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\n      );\n      setItemOffset(newOffset);\n    };\n\n    return (\n      <>\n        <Items currentItems={currentItems} />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"30px\",\n          }}\n        >\n          <ReactPaginate\n            nextLabel=\">\"\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={5}\n            marginPagesDisplayed={0}\n            pageCount={pageCount}\n            previousLabel=\"<\"\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextClassName=\"page-item\"\n            nextLinkClassName=\"page-link\"\n            breakLabel=\"\"\n            breakClassName=\"page-item\"\n            breakLinkClassName=\"page-link\"\n            containerClassName=\"pagination\"\n            activeClassName=\"active\"\n            renderOnZeroPageCount={null}\n          />\n        </div>\n      </>\n    );\n  }\n  // end pagination\n  return (\n    <div>\n      <PaginatedItems itemsPerPage={6} />\n    </div>\n  );\n};\n\nexport default ReplyPagination;\n"]},"metadata":{},"sourceType":"module"}