{"ast":null,"code":"var _jsxFileName = \"/Users/kimjunghwan/project/howmuch_front/src/components/ItemCard.js\";\nimport React, { useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport noImage from \"../img/noImage.svg\";\nimport { BsFillCaretRightFill } from \"react-icons/bs\";\nimport { RiVipCrownFill } from \"react-icons/ri\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemCard = props => {\n  // let tags = props.item.tagList;\n  // let tagsArray = tags.split(\",\");\n  // console.log(tagsArray);\n  const tierSelect = point => {\n    if (point < 250) {\n      // SetTier(\"Bronze\");\n      return \"Bronze\";\n    } else if (point < 500) {\n      // SetTier(\"Silver\");\n      return \"Silver\";\n    } else if (point < 750) {\n      // SetTier(\"Gold\");\n      return \"Gold\";\n    } else if (point < 1000) {\n      // SetTier(\"Platinum\");\n      return \"Platinum\";\n    } else {\n      // SetTier(\"Diamond\");\n      return \"Diamond\";\n    }\n  };\n\n  const tierObject = [{\n    tier: \"Diamond\",\n    color: \"#548CFF\"\n  }, {\n    tier: \"Platinum\",\n    color: \"#00BDAA\"\n  }, {\n    tier: \"Gold\",\n    color: \"#FFE300\"\n  }, {\n    tier: \"Silver\",\n    color: \"#C8C2BC\"\n  }, {\n    tier: \"Bronze\",\n    color: \"#E26A2C\"\n  }];\n\n  const findTier = userTier => {\n    console.log(userTier);\n    let findItem = tierObject.find(item => {\n      return item.tier === userTier;\n    });\n    console.log(findItem);\n    console.log(findItem.color);\n    return findItem.color;\n  }; // findTier(tierSelect(포인트 데이터))\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"20px auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"300px\",\n        color: \"white\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: props.item.imageList === null ? noImage : props.item.imageList[0],\n        style: {\n          border: \"2px solid #2D4059\",\n          width: \"280px\",\n          height: \"200px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        style: {\n          padding: \"1rem 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            style: {\n              width: \"300px\",\n              height: \"40px\",\n              textAlign: \"left\",\n              backgroundColor: \"#2D4059\",\n              borderRadius: \"5px\",\n              padding: \"10px\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\"\n            },\n            children: props.item == null ? null : props.item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              maxWidth: \"300px\",\n              height: \"40px\",\n              backgroundColor: \"#2D4059\",\n              borderRadius: \"5px\",\n              padding: \"10px\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\"\n            },\n            children: props.item == null ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(RiVipCrownFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), \" \", props.item.writer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              width: \"70px\",\n              height: \"40px\",\n              backgroundColor: \"#2D4059\",\n              borderRadius: \"5px\",\n              padding: \"10px\",\n              marginBottom: \"0\"\n            },\n            children: \"\\uC81C\\uC2DC\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BsFillCaretRightFill, {\n            style: {\n              color: \"#EA5455\",\n              fontSize: \"32px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"black\",\n              width: \"250px\",\n              fontSize: \"24px\",\n              borderBottom: \"2px solid #2D4059\"\n            },\n            children: props.item == null ? null : props.item.suggestion ? props.item.suggestion + \" 원\" : \"없음\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"20px\",\n            textAlign: \"left\"\n          },\n          children: props.item == null ? null : props.item.tag === \"not\" ? null : props.item.tagList.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: \"inline-block\",\n                maxWidth: \"280px\",\n                height: \"40px\",\n                backgroundColor: \"#2D4059\",\n                borderRadius: \"5px\",\n                padding: \"10px\",\n                marginBottom: \"0\",\n                marginRight: \"10px\",\n                textOverflow: \"ellipsis\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\"\n              },\n              children: [\"#\", item]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ItemCard;\nexport default ItemCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemCard\");","map":{"version":3,"sources":["/Users/kimjunghwan/project/howmuch_front/src/components/ItemCard.js"],"names":["React","useEffect","Card","BsFillCaretRightFill","RiVipCrownFill","ItemCard","props","tierSelect","point","tierObject","tier","color","findTier","userTier","console","log","findItem","find","item","margin","width","padding","imageList","noImage","border","height","display","textAlign","backgroundColor","borderRadius","overflow","textOverflow","whiteSpace","title","maxWidth","writer","alignItems","marginBottom","fontSize","borderBottom","suggestion","marginTop","tag","tagList","map","index","marginRight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,SAASC,oBAAT,QAAqC,gBAArC;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B;AAEA;AACA;AAEA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAK,GAAG,GAAZ,EAAiB;AACf;AACA,aAAO,QAAP;AACD,KAHD,MAGO,IAAIA,KAAK,GAAG,GAAZ,EAAiB;AACtB;AACA,aAAO,QAAP;AACD,KAHM,MAGA,IAAIA,KAAK,GAAG,GAAZ,EAAiB;AACtB;AACA,aAAO,MAAP;AACD,KAHM,MAGA,IAAIA,KAAK,GAAG,IAAZ,EAAkB;AACvB;AACA,aAAO,UAAP;AACD,KAHM,MAGA;AACL;AACA,aAAO,SAAP;AACD;AACF,GAjBD;;AAmBA,QAAMC,UAAU,GAAG,CACjB;AAAEC,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GADiB,EAEjB;AAAED,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAFiB,EAGjB;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAHiB,EAIjB;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAJiB,EAKjB;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GALiB,CAAnB;;AAQA,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,QAAIG,QAAQ,GAAGP,UAAU,CAACQ,IAAX,CAAiBC,IAAD,IAAU;AACvC,aAAOA,IAAI,CAACR,IAAL,KAAcG,QAArB;AACD,KAFc,CAAf;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACL,KAArB;AAEA,WAAOK,QAAQ,CAACL,KAAhB;AACD,GAXD,CAjC0B,CA8C1B;;;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBT,QAAAA,KAAK,EAAE,OAAzB;AAAkCU,QAAAA,OAAO,EAAE;AAA3C,OAAb;AAAA,8BACE,QAAC,IAAD,CAAM,GAAN;AACE,QAAA,OAAO,EAAC,KADV;AAEE,QAAA,GAAG,EACDf,KAAK,CAACY,IAAN,CAAWI,SAAX,KAAyB,IAAzB,GAAgCC,OAAhC,GAA0CjB,KAAK,CAACY,IAAN,CAAWI,SAAX,CAAqB,CAArB,CAH9C;AAKE,QAAA,KAAK,EAAE;AACLE,UAAAA,MAAM,EAAE,mBADH;AAELJ,UAAAA,KAAK,EAAE,OAFF;AAGLK,UAAAA,MAAM,EAAE;AAHH;AALT;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEJ,UAAAA,OAAO,EAAE;AAAX,SAAlB;AAAA,gCACE;AAAK,UAAA,KAAK,EAAE;AAAEK,YAAAA,OAAO,EAAE;AAAX,WAAZ;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,KAAK,EAAE;AACLN,cAAAA,KAAK,EAAE,OADF;AAELK,cAAAA,MAAM,EAAE,MAFH;AAGLE,cAAAA,SAAS,EAAE,MAHN;AAILC,cAAAA,eAAe,EAAE,SAJZ;AAKLC,cAAAA,YAAY,EAAE,KALT;AAMLR,cAAAA,OAAO,EAAE,MANJ;AAOLS,cAAAA,QAAQ,EAAE,QAPL;AAQLC,cAAAA,YAAY,EAAE,UART;AASLC,cAAAA,UAAU,EAAE;AATP,aADT;AAAA,sBAaG1B,KAAK,CAACY,IAAN,IAAc,IAAd,GAAqB,IAArB,GAA4BZ,KAAK,CAACY,IAAN,CAAWe;AAb1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAkBE;AAAK,UAAA,KAAK,EAAE;AAAEP,YAAAA,OAAO,EAAE;AAAX,WAAZ;AAAA,iCACE;AACE,YAAA,KAAK,EAAE;AACLQ,cAAAA,QAAQ,EAAE,OADL;AAELT,cAAAA,MAAM,EAAE,MAFH;AAGLG,cAAAA,eAAe,EAAE,SAHZ;AAILC,cAAAA,YAAY,EAAE,KAJT;AAKLR,cAAAA,OAAO,EAAE,MALJ;AAMLS,cAAAA,QAAQ,EAAE,QANL;AAOLC,cAAAA,YAAY,EAAE,UAPT;AAQLC,cAAAA,UAAU,EAAE;AARP,aADT;AAAA,sBAYG1B,KAAK,CAACY,IAAN,IAAc,IAAd,GAAqB,IAArB,gBACC;AAAA,sCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,sBADF,OACsBZ,KAAK,CAACY,IAAN,CAAWiB,MADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAmDE;AAAK,UAAA,KAAK,EAAE;AAAET,YAAAA,OAAO,EAAE,MAAX;AAAmBU,YAAAA,UAAU,EAAE;AAA/B,WAAZ;AAAA,kCACE;AACE,YAAA,KAAK,EAAE;AACLhB,cAAAA,KAAK,EAAE,MADF;AAELK,cAAAA,MAAM,EAAE,MAFH;AAGLG,cAAAA,eAAe,EAAE,SAHZ;AAILC,cAAAA,YAAY,EAAE,KAJT;AAKLR,cAAAA,OAAO,EAAE,MALJ;AAMLgB,cAAAA,YAAY,EAAE;AANT,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,oBAAD;AACE,YAAA,KAAK,EAAE;AAAE1B,cAAAA,KAAK,EAAE,SAAT;AAAoB2B,cAAAA,QAAQ,EAAE;AAA9B;AADT;AAAA;AAAA;AAAA;AAAA,kBAbF,eAgBE;AACE,YAAA,KAAK,EAAE;AACL3B,cAAAA,KAAK,EAAE,OADF;AAELS,cAAAA,KAAK,EAAE,OAFF;AAGLkB,cAAAA,QAAQ,EAAE,MAHL;AAILC,cAAAA,YAAY,EAAE;AAJT,aADT;AAAA,sBAQGjC,KAAK,CAACY,IAAN,IAAc,IAAd,GACG,IADH,GAEGZ,KAAK,CAACY,IAAN,CAAWsB,UAAX,GACAlC,KAAK,CAACY,IAAN,CAAWsB,UAAX,GAAwB,IADxB,GAEA;AAZN;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnDF,eAkFE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE,MAAb;AAAqBd,YAAAA,SAAS,EAAE;AAAhC,WAAZ;AAAA,oBACGrB,KAAK,CAACY,IAAN,IAAc,IAAd,GACG,IADH,GAEGZ,KAAK,CAACY,IAAN,CAAWwB,GAAX,KAAmB,KAAnB,GACA,IADA,GAEApC,KAAK,CAACY,IAAN,CAAWyB,OAAX,CAAmBC,GAAnB,CAAuB,CAAC1B,IAAD,EAAO2B,KAAP,KAAiB;AACtC,gCACE;AACE,cAAA,KAAK,EAAE;AACLnB,gBAAAA,OAAO,EAAE,cADJ;AAELQ,gBAAAA,QAAQ,EAAE,OAFL;AAGLT,gBAAAA,MAAM,EAAE,MAHH;AAILG,gBAAAA,eAAe,EAAE,SAJZ;AAKLC,gBAAAA,YAAY,EAAE,KALT;AAMLR,gBAAAA,OAAO,EAAE,MANJ;AAOLgB,gBAAAA,YAAY,EAAE,GAPT;AAQLS,gBAAAA,WAAW,EAAE,MARR;AASLf,gBAAAA,YAAY,EAAE,UATT;AAULD,gBAAAA,QAAQ,EAAE,QAVL;AAWLE,gBAAAA,UAAU,EAAE;AAXP,eADT;AAAA,8BAgBId,IAhBJ;AAAA,eAcO2B,KAdP;AAAA;AAAA;AAAA;AAAA,oBADF;AAoBD,WArBD;AALN;AAAA;AAAA;AAAA;AAAA,gBAlFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgID,CAhLD;;KAAMxC,Q;AAkLN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport noImage from \"../img/noImage.svg\";\nimport { BsFillCaretRightFill } from \"react-icons/bs\";\nimport { RiVipCrownFill } from \"react-icons/ri\";\n\nconst ItemCard = (props) => {\n  // let tags = props.item.tagList;\n\n  // let tagsArray = tags.split(\",\");\n  // console.log(tagsArray);\n\n  const tierSelect = (point) => {\n    if (point < 250) {\n      // SetTier(\"Bronze\");\n      return \"Bronze\";\n    } else if (point < 500) {\n      // SetTier(\"Silver\");\n      return \"Silver\";\n    } else if (point < 750) {\n      // SetTier(\"Gold\");\n      return \"Gold\";\n    } else if (point < 1000) {\n      // SetTier(\"Platinum\");\n      return \"Platinum\";\n    } else {\n      // SetTier(\"Diamond\");\n      return \"Diamond\";\n    }\n  };\n\n  const tierObject = [\n    { tier: \"Diamond\", color: \"#548CFF\" },\n    { tier: \"Platinum\", color: \"#00BDAA\" },\n    { tier: \"Gold\", color: \"#FFE300\" },\n    { tier: \"Silver\", color: \"#C8C2BC\" },\n    { tier: \"Bronze\", color: \"#E26A2C\" },\n  ];\n\n  const findTier = (userTier) => {\n    console.log(userTier);\n\n    let findItem = tierObject.find((item) => {\n      return item.tier === userTier;\n    });\n\n    console.log(findItem);\n    console.log(findItem.color);\n\n    return findItem.color;\n  };\n\n  // findTier(tierSelect(포인트 데이터))\n\n  return (\n    <div style={{ margin: \"20px auto\" }}>\n      <Card style={{ width: \"300px\", color: \"white\", padding: \"10px\" }}>\n        <Card.Img\n          variant=\"top\"\n          src={\n            props.item.imageList === null ? noImage : props.item.imageList[0]\n          }\n          style={{\n            border: \"2px solid #2D4059\",\n            width: \"280px\",\n            height: \"200px\",\n          }}\n        />\n        <Card.Body style={{ padding: \"1rem 0\" }}>\n          <div style={{ display: \"flex\" }}>\n            <Card.Title\n              style={{\n                width: \"300px\",\n                height: \"40px\",\n                textAlign: \"left\",\n                backgroundColor: \"#2D4059\",\n                borderRadius: \"5px\",\n                padding: \"10px\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {props.item == null ? null : props.item.title}\n            </Card.Title>\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <p\n              style={{\n                maxWidth: \"300px\",\n                height: \"40px\",\n                backgroundColor: \"#2D4059\",\n                borderRadius: \"5px\",\n                padding: \"10px\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {props.item == null ? null : (\n                <span>\n                  <RiVipCrownFill /> {props.item.writer}\n                </span>\n              )}\n            </p>\n          </div>\n\n          {/* <Card.Text\n            style={{\n              height: \"150px\",\n              backgroundColor: \"#2D4059\",\n              borderRadius: \"5px\",\n              padding: \"10px\",\n              overflow: \"hidden\",\n            }}\n          >\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text> */}\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <p\n              style={{\n                width: \"70px\",\n                height: \"40px\",\n                backgroundColor: \"#2D4059\",\n                borderRadius: \"5px\",\n                padding: \"10px\",\n                marginBottom: \"0\",\n              }}\n            >\n              제시가\n            </p>\n            <BsFillCaretRightFill\n              style={{ color: \"#EA5455\", fontSize: \"32px\" }}\n            />\n            <div\n              style={{\n                color: \"black\",\n                width: \"250px\",\n                fontSize: \"24px\",\n                borderBottom: \"2px solid #2D4059\",\n              }}\n            >\n              {props.item == null\n                ? null\n                : props.item.suggestion\n                ? props.item.suggestion + \" 원\"\n                : \"없음\"}\n            </div>\n          </div>\n          <div style={{ marginTop: \"20px\", textAlign: \"left\" }}>\n            {props.item == null\n              ? null\n              : props.item.tag === \"not\"\n              ? null\n              : props.item.tagList.map((item, index) => {\n                  return (\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        maxWidth: \"280px\",\n                        height: \"40px\",\n                        backgroundColor: \"#2D4059\",\n                        borderRadius: \"5px\",\n                        padding: \"10px\",\n                        marginBottom: \"0\",\n                        marginRight: \"10px\",\n                        textOverflow: \"ellipsis\",\n                        overflow: \"hidden\",\n                        whiteSpace: \"nowrap\",\n                      }}\n                      key={index}\n                    >\n                      #{item}\n                    </span>\n                  );\n                })}\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default ItemCard;\n"]},"metadata":{},"sourceType":"module"}