{"ast":null,"code":"var _jsxFileName = \"/Users/kimjunghwan/project/howmuch_front/src/components/BoardMain.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { SiCashapp } from \"react-icons/si\";\nimport ReactPaginate from \"react-paginate\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport ItemCard from \"./ItemCard\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet TopTitle = styled(\"p\")`\n  font-size: 48px;\n`;\n_c = TopTitle;\nlet Line = styled(\"div\")`\n  width: 80%;\n  height: 5px;\n  background-color: #2d4059;\n  margin: 0 auto;\n`;\n_c2 = Line;\n\nconst BoardMain = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let state = useSelector(state => {\n    return state;\n  });\n  let boardState = state.boardReducer;\n  const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\n  function Items({\n    currentItems\n  }) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currentItems && currentItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Item #\", item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false);\n  }\n\n  function PaginatedItems({\n    itemsPerPage\n  }) {\n    _s();\n\n    // We start with an empty list of items.\n    const [currentItems, setCurrentItems] = useState(null);\n    const [pageCount, setPageCount] = useState(0); // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n\n    const [itemOffset, setItemOffset] = useState(0);\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(items.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(items.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]); // Invoke when user click to request another page.\n\n    const handlePageClick = event => {\n      const newOffset = event.selected * itemsPerPage % items.length;\n      console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n      setItemOffset(newOffset);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Items, {\n        currentItems: currentItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        breakLabel: \"...\",\n        nextLabel: \"next >\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 5,\n        pageCount: pageCount,\n        previousLabel: \"< previous\",\n        renderOnZeroPageCount: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  _s(PaginatedItems, \"HTeX8cSP+G2jiDQZoJcFFLxPhRM=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cotainer-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        style: {\n          paddingTop: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-1\",\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(SiCashapp, {\n            style: {\n              color: \"#EA5455\",\n              fontSize: \"70px\",\n              margin: \"0 20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-9\",\n          children: /*#__PURE__*/_jsxDEV(TopTitle, {\n            children: \"Check items & Feed back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-lg\",\n      style: {\n        margin: \"80px auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: boardState.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-4 d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(ItemCard, {\n              item: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginatedItems, {\n      itemsPerPage: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(BoardMain, \"dFAAPDNEsxQMpRpiSMZXJjfPktw=\", false, function () {\n  return [useSelector];\n});\n\n_c3 = BoardMain;\nexport default BoardMain;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TopTitle\");\n$RefreshReg$(_c2, \"Line\");\n$RefreshReg$(_c3, \"BoardMain\");","map":{"version":3,"sources":["/Users/kimjunghwan/project/howmuch_front/src/components/BoardMain.js"],"names":["React","useEffect","useState","SiCashapp","ReactPaginate","useSelector","styled","ItemCard","TopTitle","Line","BoardMain","state","boardState","boardReducer","items","Items","currentItems","map","item","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","console","log","slice","Math","ceil","length","handlePageClick","event","newOffset","selected","paddingTop","marginBottom","color","fontSize","margin","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { SiCashapp } from \"react-icons/si\";\nimport ReactPaginate from \"react-paginate\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport ItemCard from \"./ItemCard\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nlet TopTitle = styled(\"p\")`\n  font-size: 48px;\n`;\n\nlet Line = styled(\"div\")`\n  width: 80%;\n  height: 5px;\n  background-color: #2d4059;\n  margin: 0 auto;\n`;\n\nconst BoardMain = () => {\n  let state = useSelector((state) => {\n    return state;\n  });\n\n  let boardState = state.boardReducer;\n\n  const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\n  function Items({ currentItems }) {\n    return (\n      <>\n        {currentItems &&\n          currentItems.map((item) => (\n            <div>\n              <h3>Item #{item}</h3>\n            </div>\n          ))}\n      </>\n    );\n  }\n\n  function PaginatedItems({ itemsPerPage }) {\n    // We start with an empty list of items.\n    const [currentItems, setCurrentItems] = useState(null);\n    const [pageCount, setPageCount] = useState(0);\n    // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n    const [itemOffset, setItemOffset] = useState(0);\n\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(items.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(items.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]);\n\n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n      const newOffset = (event.selected * itemsPerPage) % items.length;\n      console.log(\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\n      );\n      setItemOffset(newOffset);\n    };\n\n    return (\n      <>\n        <Items currentItems={currentItems} />\n        <ReactPaginate\n          breakLabel=\"...\"\n          nextLabel=\"next >\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={5}\n          pageCount={pageCount}\n          previousLabel=\"< previous\"\n          renderOnZeroPageCount={null}\n        />\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"cotainer-lg\">\n        <div\n          className=\"row d-flex justify-content-center\"\n          style={{ paddingTop: \"50px\" }}\n        >\n          <div className=\"col-lg-1\" style={{ marginBottom: \"20px\" }}>\n            <SiCashapp\n              style={{ color: \"#EA5455\", fontSize: \"70px\", margin: \"0 20px\" }}\n            />\n          </div>\n          <div className=\"col-lg-9\">\n            <TopTitle>Check items & Feed back</TopTitle>\n          </div>\n        </div>\n      </div>\n      <Line></Line>\n\n      <div className=\"container-lg\" style={{ margin: \"80px auto\" }}>\n        <div className=\"row\">\n          {boardState.map((item, index) => {\n            return (\n              <div\n                className=\"col-lg-4 d-flex justify-content-center\"\n                key={index}\n              >\n                <ItemCard item={item} />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <PaginatedItems itemsPerPage={4} />\n    </div>\n  );\n};\n\nexport default BoardMain;\n"]},"metadata":{},"sourceType":"module"}