{"ast":null,"code":"var _jsxFileName = \"/Users/kimjunghwan/project/howmuch_front/src/components/ReplyPagination.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import { useNavigate } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nimport { AiFillLike, AiFillDislike } from \"react-icons/ai\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReplyPagination = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const checkLogin = async () => {\n    await axios.get(\"/checklogin\").then(result => {\n      SetCheckUser(result.data);\n      console.log(result.data);\n    }).catch(err => {\n      console.log(\"please login\");\n    });\n  };\n\n  useEffect(() => {\n    checkLogin();\n  }, []);\n  let [checkUser, SetCheckUser] = useState(\"\");\n  let state = useSelector(state => {\n    return state;\n  });\n  let navigate = useNavigate();\n  let dispatch = useDispatch();\n  let replyState = state.replyReducer; // pagination data\n\n  const items = replyState; // styled component\n\n  let Reply = styled(\"div\")`\n    background-color: #2d4059;\n    color: white;\n    display: flex;\n    justify-content: space-between;\n    padding: 10px;\n    margin-top: 20px;\n    border-radius: 12px;\n  `; // pagination\n\n  function Items({\n    currentItems\n  }) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-lg d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"800px\",\n            marginTop: \"100px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"24px\",\n              borderBottom: \"2px solid #2D4059\",\n              textAlign: \"left\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uB313\\uAE00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), currentItems && currentItems.map((item, index) => /*#__PURE__*/_jsxDEV(Reply, {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-7\",\n              style: {\n                textAlign: \"left\"\n              },\n              children: item == null ? null : item.rcontent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-5\",\n              style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"end\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: \"inline-block\",\n                  width: \"90px\",\n                  paddingRight: \"10px\",\n                  textOverflow: \"ellipsis\",\n                  overflow: \"hidden\",\n                  whiteSpace: \"nowrap\"\n                },\n                children: item == null ? null : item.replyer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: \"inline-block\",\n                  paddingRight: \"10px\",\n                  width: \"180px\"\n                },\n                children: item == null ? null : item.rdate === \"2021/00/00\" ? null : String(new Date(+new Date(item.rdate) + 3240 * 10000).toISOString().replace(\"T\", \" \").replace(/\\..*/, \"\"))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AiFillLike, {\n                style: {\n                  color: \"#EA5455\",\n                  cursor: \"pointer\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: \"inline-block\",\n                  paddingRight: \"10px\"\n                },\n                children: item == null ? null : item.rlike\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AiFillDislike, {\n                style: {\n                  color: \"#F07B3F\",\n                  cursor: \"pointer\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: \"inline-block\",\n                  paddingRight: \"10px\"\n                },\n                children: item == null ? null : item.rdislike\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this), !checkUser ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n                id: item == null ? \"\" : item.rno,\n                onClick: async e => {\n                  let target = e.currentTarget;\n                  console.log(parseInt(target.id));\n                  console.log(item.bno);\n                  await axios({\n                    url: \"/DeleteReply\",\n                    method: \"delete\",\n                    params: {\n                      rno: parseInt(target.id),\n                      bno: item.bno,\n                      replyer: item.replyer\n                    }\n                  }).then(res => {\n                    console.log(res.data);\n                    dispatch({\n                      type: \"deleteReply\",\n                      payload: res.data\n                    });\n                  }).catch(err => {\n                    console.log(err);\n                    navigate(\"/login\");\n                  });\n                },\n                style: {\n                  display: \"inline-block\",\n                  marginTop: \"-5px\",\n                  cursor: \"pointer\"\n                },\n                children: /*#__PURE__*/_jsxDEV(MdDeleteForever, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  function PaginatedItems({\n    itemsPerPage\n  }) {\n    _s();\n\n    // We start with an empty list of items.\n    const [currentItems, setCurrentItems] = useState(null);\n    const [pageCount, setPageCount] = useState(0); // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n\n    const [itemOffset, setItemOffset] = useState(0);\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(items.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(items.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]); // Invoke when user click to request another page.\n\n    const handlePageClick = event => {\n      const newOffset = event.selected * itemsPerPage % items.length;\n      console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n      setItemOffset(newOffset);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Items, {\n        currentItems: currentItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"30px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          nextLabel: \">\",\n          onPageChange: handlePageClick,\n          pageRangeDisplayed: 5,\n          marginPagesDisplayed: 0,\n          pageCount: pageCount,\n          previousLabel: \"<\",\n          pageClassName: \"page-item\",\n          pageLinkClassName: \"page-link\",\n          previousClassName: \"page-item\",\n          previousLinkClassName: \"page-link\",\n          nextClassName: \"page-item\",\n          nextLinkClassName: \"page-link\",\n          breakLabel: \"\",\n          breakClassName: \"page-item\",\n          breakLinkClassName: \"page-link\",\n          containerClassName: \"pagination\",\n          activeClassName: \"active\",\n          renderOnZeroPageCount: null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } // end pagination\n\n\n  _s(PaginatedItems, \"HTeX8cSP+G2jiDQZoJcFFLxPhRM=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PaginatedItems, {\n      itemsPerPage: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ReplyPagination, \"cuYidx/meqVmaEYAo2mV+y2JmWs=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n\n_c = ReplyPagination;\nexport default ReplyPagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReplyPagination\");","map":{"version":3,"sources":["/Users/kimjunghwan/project/howmuch_front/src/components/ReplyPagination.js"],"names":["React","useEffect","useState","ReactPaginate","useDispatch","useSelector","styled","AiFillLike","AiFillDislike","MdDeleteForever","axios","useNavigate","ReplyPagination","checkLogin","get","then","result","SetCheckUser","data","console","log","catch","err","checkUser","state","navigate","dispatch","replyState","replyReducer","items","Reply","Items","currentItems","width","marginTop","fontSize","borderBottom","textAlign","map","item","index","rcontent","display","alignItems","justifyContent","paddingRight","textOverflow","overflow","whiteSpace","replyer","rdate","String","Date","toISOString","replace","color","cursor","rlike","rdislike","rno","e","target","currentTarget","parseInt","id","bno","url","method","params","res","type","payload","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","slice","Math","ceil","length","handlePageClick","event","newOffset","selected"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { AiFillLike, AiFillDislike } from \"react-icons/ai\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ReplyPagination = () => {\n  const checkLogin = async () => {\n    await axios\n      .get(\"/checklogin\")\n      .then((result) => {\n        SetCheckUser(result.data);\n        console.log(result.data);\n      })\n      .catch((err) => {\n        console.log(\"please login\");\n      });\n  };\n\n  useEffect(() => {\n    checkLogin();\n  }, []);\n\n  let [checkUser, SetCheckUser] = useState(\"\");\n\n  let state = useSelector((state) => {\n    return state;\n  });\n\n  let navigate = useNavigate();\n\n  let dispatch = useDispatch();\n\n  let replyState = state.replyReducer;\n\n  // pagination data\n  const items = replyState;\n\n  // styled component\n  let Reply = styled(\"div\")`\n    background-color: #2d4059;\n    color: white;\n    display: flex;\n    justify-content: space-between;\n    padding: 10px;\n    margin-top: 20px;\n    border-radius: 12px;\n  `;\n\n  // pagination\n  function Items({ currentItems }) {\n    return (\n      <>\n        <div className=\"container-lg d-flex justify-content-center\">\n          <div style={{ width: \"800px\", marginTop: \"100px\" }}>\n            <div\n              style={{\n                fontSize: \"24px\",\n                borderBottom: \"2px solid #2D4059\",\n                textAlign: \"left\",\n              }}\n            >\n              <span>댓글</span>\n            </div>\n            {currentItems &&\n              currentItems.map((item, index) => (\n                <Reply className=\"row\" key={index}>\n                  <div className=\"col-lg-7\" style={{ textAlign: \"left\" }}>\n                    {item == null ? null : item.rcontent}\n                  </div>\n                  <div\n                    className=\"col-lg-5\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"end\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        width: \"90px\",\n                        paddingRight: \"10px\",\n                        textOverflow: \"ellipsis\",\n                        overflow: \"hidden\",\n                        whiteSpace: \"nowrap\",\n                      }}\n                    >\n                      {item == null ? null : item.replyer}\n                    </span>\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        paddingRight: \"10px\",\n                        width: \"180px\",\n                      }}\n                    >\n                      {item == null\n                        ? null\n                        : item.rdate === \"2021/00/00\"\n                        ? null\n                        : String(\n                            new Date(+new Date(item.rdate) + 3240 * 10000)\n                              .toISOString()\n                              .replace(\"T\", \" \")\n                              .replace(/\\..*/, \"\")\n                          )}\n                    </span>\n                    <AiFillLike\n                      style={{ color: \"#EA5455\", cursor: \"pointer\" }}\n                    />\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        paddingRight: \"10px\",\n                      }}\n                    >\n                      {item == null ? null : item.rlike}\n                    </span>\n                    <AiFillDislike\n                      style={{ color: \"#F07B3F\", cursor: \"pointer\" }}\n                    />\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        paddingRight: \"10px\",\n                      }}\n                    >\n                      {item == null ? null : item.rdislike}\n                    </span>\n                    {!checkUser ? null : (\n                      <span\n                        id={item == null ? \"\" : item.rno}\n                        onClick={async (e) => {\n                          let target = e.currentTarget;\n                          console.log(parseInt(target.id));\n                          console.log(item.bno);\n\n                          await axios({\n                            url: \"/DeleteReply\",\n                            method: \"delete\",\n                            params: {\n                              rno: parseInt(target.id),\n                              bno: item.bno,\n                              replyer: item.replyer,\n                            },\n                          })\n                            .then((res) => {\n                              console.log(res.data);\n                              dispatch({\n                                type: \"deleteReply\",\n                                payload: res.data,\n                              });\n                            })\n                            .catch((err) => {\n                              console.log(err);\n                              navigate(\"/login\");\n                            });\n                        }}\n                        style={{\n                          display: \"inline-block\",\n                          marginTop: \"-5px\",\n                          cursor: \"pointer\",\n                        }}\n                      >\n                        <MdDeleteForever />\n                      </span>\n                    )}\n                  </div>\n                </Reply>\n              ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  function PaginatedItems({ itemsPerPage }) {\n    // We start with an empty list of items.\n    const [currentItems, setCurrentItems] = useState(null);\n    const [pageCount, setPageCount] = useState(0);\n    // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n    const [itemOffset, setItemOffset] = useState(0);\n\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(items.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(items.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]);\n\n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n      const newOffset = (event.selected * itemsPerPage) % items.length;\n      console.log(\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\n      );\n      setItemOffset(newOffset);\n    };\n\n    return (\n      <>\n        <Items currentItems={currentItems} />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"30px\",\n          }}\n        >\n          <ReactPaginate\n            nextLabel=\">\"\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={5}\n            marginPagesDisplayed={0}\n            pageCount={pageCount}\n            previousLabel=\"<\"\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextClassName=\"page-item\"\n            nextLinkClassName=\"page-link\"\n            breakLabel=\"\"\n            breakClassName=\"page-item\"\n            breakLinkClassName=\"page-link\"\n            containerClassName=\"pagination\"\n            activeClassName=\"active\"\n            renderOnZeroPageCount={null}\n          />\n        </div>\n      </>\n    );\n  }\n  // end pagination\n  return (\n    <div>\n      <PaginatedItems itemsPerPage={6} />\n    </div>\n  );\n};\n\nexport default ReplyPagination;\n"]},"metadata":{},"sourceType":"module"}